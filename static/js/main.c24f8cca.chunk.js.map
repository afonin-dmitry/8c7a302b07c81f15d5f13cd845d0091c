{"version":3,"sources":["features/editor/recorder/Recorder.js","features/editor/editorSlice.js","features/editor/player/playerSlice.js","features/editor/recorder/MicrophoneRecorder.js","features/editor/recorder/recorderSlice.js","features/editor/MyEditor.js","features/editor/EditorPage.js","App.js","app/config.js","features/editor/Api.js","features/editor/ListSlice.js","app/store.js","index.js"],"names":["RecordButton","props","IconButton","size","color","onClick","fontSize","PauseButton","StopButton","disabled","Recorder","Paper","sx","position","bottom","left","right","style","zIndex","elevation","Box","display","justifyContent","alignItems","recording","onPause","onStart","uploadEditorData","setUpload","uploadEditorDataSaga","downloadEditorData","downloadEditorDataSaga","initEditorState","createAction","editorSlice","createSlice","name","initialState","editorState","EditorState","createEmpty","uploaded","reducers","updateEditorState","state","action","payload","upd","console","log","call","put","takeEvery","debounce","actions","selectEditorState","editor","playerSaga","playerSlice","playing","played","play","pause","seek","extraReducers","builder","addCase","selectPlaying","player","selectPlayed","Microphone","this","stream","getUserMedia","navigator","mediaDevices","webkitGetUserMedia","mozGetUserMedia","Error","bind","a","checkPermissions","requestPermissions","permissions","query","permission","startStream","stopStream","audio","getTracks","forEach","track","stop","microphone","recorder","inited","init","register","connect","cb","ms","MediaRecorder","mimeType","ondataavailable","start","initRecorderSaga","startRecordingSaga","stopRecordingSaga","watchUploadChannelSaga","recorderSlice","startRecording","stopRecording","initRecorder","uploadChannel","channel","MicrophoneRecorder","e","type","data","take","selectRecording","MyEditor","onUpdateEditorState","onLoad","useEffect","height","px","pt","mx","onChange","onFocus","EditorPage","useSelector","dispatch","useDispatch","onProgress","App","SERVER_URL","getList","axios","get","id","getText","getDocument","create","file","isLast","formData","FormData","append","post","headers","downloadListData","downloadListDataSaga","initList","ListSlice","initData","Api","sagaMiddleware","createSagaMiddleware","store","configureStore","reducer","editorReducer","playerReducer","recorderReducer","list","ListReducer","middleware","getDefaultMiddleware","serializableCheck","concat","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c24f8cca.chunk.js","sourcesContent":["import Paper from '@mui/material/Paper';\nimport Box from '@mui/material/Box/Box';\nimport * as React from 'react';\n\nimport IconButton from '@mui/material/IconButton';\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\nimport PauseIcon from '@mui/icons-material/Pause';\nimport StopSharpIcon from '@mui/icons-material/StopSharp';\n\nconst RecordButton = (props) => {\n    return (\n        <IconButton size={ 'large' } color={ 'success' } onClick={ props.onClick }>\n            <FiberManualRecordIcon fontSize={ 'large' } />\n        </IconButton>\n    );\n}\n\nconst PauseButton = (props) => {\n    return (\n        <IconButton size={ 'large' } color={ 'default' } onClick={ props.onClick }>\n            <PauseIcon fontSize={ 'large' } />\n        </IconButton>\n    );\n}\n\nconst StopButton = (props) => {\n    return (\n        <IconButton\n            size={ 'large' }\n            color={ 'default' }\n            onClick={ props.onClick }\n            disabled={ props.disabled }\n        >\n            <StopSharpIcon fontSize={ 'large' } />\n        </IconButton>\n    );\n};\n\nconst Recorder = (props) => (\n    <Paper sx={{ position: 'fixed', bottom: 0, left: 0, right: 0 }} style={{ zIndex: 10 }} elevation={ 5 }>\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\n            { props.recording\n                ? <PauseButton onClick={ props.onPause }/>\n                : <RecordButton onClick={ props.onStart }/>\n            }\n            <StopButton disabled={ !props.recording } onClick={ props.onPause } />\n        </Box>\n    </Paper>\n);\n\nexport default Recorder;","import { createSlice, createAction } from '@reduxjs/toolkit'\nimport { EditorState } from 'draft-js';\nimport { call, put, takeEvery, throttle, race, debounce, takeLatest, all, delay } from 'redux-saga/effects';\n// TODO 'saga-toolkit'\n\nconst initEditorState = createAction('initEditorState');\n\nexport const editorSlice = createSlice({\n    name: 'editor',\n    initialState: {\n        editorState: EditorState.createEmpty(),\n        uploaded: true,\n    },\n    reducers: {\n        updateEditorState: (state, action) => { state.editorState = action.payload },\n        uploaded: (state, action) => { state.uploaded = action.payload },\n        upd: (state, action) => { console.log(action) },\n    }\n})\n\nfunction* uploadEditorData(action) {\n    yield call(() => { console.log(action) });\n    yield put(uploaded(true));\n}\n\nfunction* setUpload() {\n    yield put(uploaded(false));\n}\n\nfunction* uploadEditorDataSaga() {\n    yield takeEvery(updateEditorState, setUpload);\n    yield debounce(1000, updateEditorState, uploadEditorData);\n}\n\nfunction* downloadEditorData(action) {\n    yield call(() => { console.log(action) });\n    yield put(upd(14));\n    // yield put(); TODO dispatch loaded event\n}\n\nfunction* downloadEditorDataSaga() {\n    yield takeEvery(initEditorState, downloadEditorData)\n}\n\nexport default editorSlice.reducer;\nexport const { updateEditorState, upd, uploaded } = editorSlice.actions;\nexport { initEditorState };\nexport const selectEditorState = state => state.editor.editorState;\nexport { uploadEditorDataSaga, downloadEditorDataSaga };","import { createSlice } from '@reduxjs/toolkit'\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport { updateEditorState } from '../editorSlice'\n\nexport const playerSlice = createSlice({\n    name: 'player',\n    initialState: {\n        playing: false,\n        played: 0,\n    },\n    reducers: {\n        play: state => { state.playing = true },\n        pause: state => { state.playing = false },\n        seek: (state, action) => { state.played = action.payload },\n    },\n    extraReducers: builder => {\n        builder.addCase(updateEditorState, (state, action) => {\n            //debugger;\n        })\n    }\n})\n\nexport default playerSlice.reducer;\nexport const { play, pause, seek } = playerSlice.actions;\nexport const selectPlaying = state => state.player.playing;\nexport const selectPlayed = state => state.player.played;\n\nfunction* sendRecording(action) {\n    // yield call(() => { console.log(action) });\n    // yield put(seek(0));\n}\n\nfunction* playerSaga() {\n    // yield takeEvery(stop, sendRecording);\n}\n\nexport { playerSaga };\n\n\n// переместили каретку dispatch => поменяли прогресс\n//","import { MediaRecorder, register } from 'extendable-media-recorder';\nimport { connect } from 'extendable-media-recorder-wav-encoder';\n\nclass Microphone {\n    constructor() {\n        this.stream = null;\n        const getUserMedia =  navigator.mediaDevices.getUserMedia ||\n            navigator.getUserMedia ||\n            navigator.webkitGetUserMedia ||\n            navigator.mozGetUserMedia\n\n        if (!getUserMedia) {\n            throw new Error('getUserMedia is not available on this page')\n        }\n\n        this.getUserMedia = getUserMedia.bind(navigator);\n    }\n\n    async init() {\n        if (!await this.checkPermissions()) {\n            await this.requestPermissions();\n        }\n    }\n\n    async checkPermissions() {\n        if (!navigator.permissions) {\n            return false;\n        }\n\n        const permission = await navigator.permissions.query({ name:'microphone' });\n\n        if (permission.state === 'granted') {\n            return true;\n        }\n\n        if (permission.state === 'prompt') {\n            return false;\n        }\n\n        throw new Error('Permissions denied');\n    }\n\n    async requestPermissions() {\n        // current browser API can't request for permissions\n        // we can just toggle microphone stream to do it\n        await this.startStream();\n        this.stopStream();\n    }\n\n    async startStream() {\n        return this.stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n    }\n\n    stopStream() {\n        this.stream.getTracks().forEach(track => track.stop());\n        this.stream = null;\n    }\n}\n\nclass MicrophoneRecorder {\n    constructor() {\n        this.microphone = new Microphone();\n        this.recorder = null;\n        this.inited = false;\n    }\n\n    async init() {\n        if (this.inited)return;\n        this.inited = true;\n        await this.microphone.init();\n        await register(await connect());\n    }\n\n    async start(cb, ms) {\n        const stream = await this.microphone.startStream();\n        this.recorder = new MediaRecorder(stream, { mimeType: 'audio/wav' });\n\n        this.recorder.ondataavailable = cb;\n        this.recorder.start(ms);\n    }\n\n    stop() {\n        this.recorder.stop();\n        this.recorder = null;\n        this.microphone.stopStream();\n    }\n}\n\nexport default new MicrophoneRecorder();","import { createSlice, createAction } from '@reduxjs/toolkit';\nimport {call, put, takeEvery, delay, debounce, take } from 'redux-saga/effects';\nimport { channel } from 'redux-saga';\nimport MicrophoneRecorder from './MicrophoneRecorder';\n\nexport const recorderSlice = createSlice({\n    name: 'recorder',\n    initialState: {\n        recording: false,\n        init: false,\n    },\n    reducers: {\n        startRecording: state => { state.recording = true },\n        stopRecording: state => { state.recording = false },\n        initRecorder: state => { state.init = true; console.log('init'); },\n    }\n})\n\nconst uploadChannel = channel();\n// import { call, put, takeEvery, delay } from 'redux-saga/effects';\n// import { updateEditorState } from '../editorSlice';\n//\n// function* callSelfOnTimer({ value }) {\n//     // Do your work here\n//\n//     // If still true call yourself in 2 seconds\n//     if (value) {\n//         yield delay(2000);\n//         yield call(callSelfOnTimer, { value });\n//     }\n// }\nfunction* init() {\n    yield call(MicrophoneRecorder.init.bind(MicrophoneRecorder));\n}\n\nfunction* initRecorderSaga() {\n    yield takeEvery(initRecorder, init);\n}\n\nfunction* start() {\n    yield call(MicrophoneRecorder.start.bind(MicrophoneRecorder), (e) => uploadChannel.put({type: 'UPLOAD', payload: e.data}), 10000);\n}\n\nfunction* startRecordingSaga() {\n    yield takeEvery(startRecording, start);\n}\n\nfunction* stop() {\n    // yield call(MicrophoneRecorder.stop.bind(MicrophoneRecorder));\n}\n\nfunction* stopRecordingSaga() {\n    yield takeEvery(stopRecording, stop);\n}\n\n\nfunction* watchUploadChannelSaga() {\n    while (true) {\n        const action = yield take(uploadChannel);\n        // take payload and send to server\n    }\n}\n\nexport default recorderSlice.reducer;\nexport const { startRecording, stopRecording, initRecorder } = recorderSlice.actions;\nexport const selectRecording = state => state.recorder.recording;\nexport { initRecorderSaga, startRecordingSaga, stopRecordingSaga, watchUploadChannelSaga };\n\n\n\n\n\n\n\n\n\n\n// actions: init, start, pause, stop\n\n\n\n// saga: init -> request for permissions, init recorder,\n// start -> start recording, push chunks, dispatch only one upload every N ms.\n// if upload succeed - remove uploaded chunks?\n// pause -> pause recording, dispatch upload chunks\n// stop -> stop recording, dispatch all chunks upload\n\n// to stop recording\n// recorder.stop();\n\n// on start recording\n// start recording, bind dispatch event on chunk\n\n// on stop recording\n// stop recording, unbind dispatch event\n\n// start recording dispatches chunks\n// on chunks\n\n// upload\n// init\n","import React, { useEffect } from 'react';\nimport { Editor } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\n\nimport Paper from '@mui/material/Paper';\n\nconst MyEditor = ({ editorState, onUpdateEditorState, onLoad }) => {\n    useEffect(() => onLoad(), []);\n\n    return (\n        <Paper sx={{ height: '100vh', px: '5vw', pt: '50px', mx :'10vw' }} elevation={ 5 }>\n            <Editor\n                editorState={ editorState }\n                onChange={ onUpdateEditorState }\n                onFocus={ (e) => console.log(e) }\n            />\n        </Paper>\n    );\n};\n\nexport default MyEditor;","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport Player from './player/Player';\nimport Recorder from './recorder/Recorder';\n\nimport { play, pause, seek, selectPlaying, selectPlayed } from './player/playerSlice';\nimport { initRecorder, startRecording, stopRecording, selectRecording } from './recorder/recorderSlice';\nimport { selectEditorState, updateEditorState, initEditorState } from './editorSlice';\nimport MyEditor from './MyEditor';\n\nconst EditorPage = () => {\n    const playing = useSelector(selectPlaying);\n    const played = useSelector(selectPlayed);\n    const recording = useSelector(selectRecording);\n    const dispatch = useDispatch();\n\n    useEffect(() => dispatch( initRecorder() ), []);\n    // if (status === 'processing') {\n    //     // TODO replace with loader component\n    //     return <span>'processing'</span>;\n    // }\n\n    return (\n        <div>\n            <MyEditor\n                editorState={ useSelector(selectEditorState) }\n                onUpdateEditorState={ (payload) => dispatch(updateEditorState(payload)) }\n                onLoad={ (payload) => dispatch(initEditorState(payload)) }\n            />\n            <Recorder\n                played={ played }\n                playing={ playing }\n                recording={ recording }\n                onStart={ () => dispatch(startRecording()) }\n                onPause={ () => dispatch(stopRecording()) }\n                onProgress={ (payload) => dispatch(seek(payload)) }\n            />\n\n        </div>\n    );\n}\n\nexport default EditorPage;\n\n\n// <Player\n//     played={ played }\n//     playing={ playing }\n//     onStart={ () => dispatch(play()) }\n//     onPause={ () => dispatch(pause()) }\n//     onProgress={ (payload) => dispatch(seek(payload)) }\n// />","import * as React from 'react';\n\nimport EditorPage from './features/editor/EditorPage';\n// import List from './features/editor/pages/List';\n\nconst App = () => {\n    return (\n        <EditorPage />\n  );\n}\n\nexport default App;\n","const SERVER_URL = 'http://192.168.0.105'; //process.env.SERVER_URL;\n\nexport default SERVER_URL;","import SERVER_URL from '../../app/config';\nimport axios from 'axios';\n\nconst getList = async () => {\n    return await axios.get(`${SERVER_URL}/api/v1/audio/`);\n}\n\nconst get = async (id) => {\n    return await axios.get(`${SERVER_URL}/api/v1/audio/${id}/`);\n}\n\nconst getText = async (id) => {\n    return await axios.get(`${SERVER_URL}/api/v1/audio/${id}/text/`);\n}\n\nconst getDocument = async (id) => {\n    return await axios.get(`${SERVER_URL}/api/v1/audio/${id}/document/`);\n}\n\nconst create = async (file, isLast = false) => {\n    const formData = new FormData();\n\n    formData.append('audio', file);\n    formData.append('isRussianLanguage', true);\n    formData.append('isLast', isLast);\n\n    return await axios.post(`${SERVER_URL}/api/v1/audio/`, formData, {\n        headers: { 'Content-Type': 'multipart/form-data' }\n    });\n}\n\nconst setText = async (id, text) => {\n    await axios.post(`${SERVER_URL}/api/v1/audio/${id}/text/`, text);\n}\n\nexport default { getList, get, getText, getDocument, create };","import { createSlice, createAction } from '@reduxjs/toolkit'\nimport { call, put, takeEvery } from 'redux-saga/effects';\nimport Api from './Api';\n\nconst initList = createAction('initList');\n\nexport const ListSlice = createSlice({\n    name: 'list',\n    initialState: {\n        data: [],\n    },\n    reducers: {\n        initData: (state, action) => { state.data = action.payload; console.log(action.payload) },\n    }\n})\n\nfunction* downloadListData() {\n    const data = yield call(Api.getList);\n    yield put(initData(data));\n}\n\nfunction* downloadListDataSaga() {\n    yield takeEvery(initList, downloadListData)\n}\n\nexport default ListSlice.reducer;\nexport { initList };\nexport const { initData } = ListSlice.actions;\nexport const selectListData = state => state.list.data;\nexport { downloadListDataSaga };","import { configureStore } from '@reduxjs/toolkit'\n\nimport createSagaMiddleware from 'redux-saga'\n\nimport editorReducer, { uploadEditorDataSaga, downloadEditorDataSaga } from '../features/editor/editorSlice'\nimport playerReducer, { playerSaga } from '../features/editor/player/playerSlice';\nimport recorderReducer from '../features/editor/recorder/recorderSlice';\nimport ListReducer, { downloadListDataSaga } from '../features/editor/ListSlice';\nimport { initRecorderSaga, startRecordingSaga, stopRecordingSaga, watchUploadChannelSaga } from '../features/editor/recorder/recorderSlice';\n\nexport const sagaMiddleware = createSagaMiddleware();\nconst store = configureStore({\n    reducer: {\n        editor: editorReducer,\n        player: playerReducer,\n        recorder: recorderReducer,\n        list: ListReducer,\n    },\n    middleware: (getDefaultMiddleware) => {\n        return getDefaultMiddleware({serializableCheck: false}).concat(sagaMiddleware);\n    }\n})\nexport default store;\n\nsagaMiddleware.run(playerSaga);\nsagaMiddleware.run(uploadEditorDataSaga);\nsagaMiddleware.run(downloadEditorDataSaga);\nsagaMiddleware.run(initRecorderSaga);\nsagaMiddleware.run(startRecordingSaga);\nsagaMiddleware.run(stopRecordingSaga);\nsagaMiddleware.run(watchUploadChannelSaga);\nsagaMiddleware.run(downloadListDataSaga);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\n\nimport { Provider } from 'react-redux';\nimport store from './app/store';\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={ store }>\n            <HashRouter>\n                <App />\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}